= Why is @Vetoed a best practice for persistent (JPA) entities?
Ove Ranheim
:since: 1.1

Adding the +@Vetoed+ annotation to all persistent entities is considered a best practice in most cases. The purpose of this annotation is to prevent the BeanManager from managing an entity as a CDI Bean.

When an entity is annotated +@Vetoed+ no injections will take place. The reasoning behind this is to prevent the BeanManager to perform operations that may cause the JPA provider to break.

[source,java]
----
@Entity
@Vetoed
public class Foo {
   /* This will not be respected by the BeanManager */
   @Inject
   private Logger log;

   /* This annotation is managed by the EnityManager and not the BeanManager */
   @Column
   private String bar; 
}
----

All JPA persistent entities should be marked with +@Vetoed+ as this will prevent the CDI attempting to manage the lifecycle of the object, and makes it very clear that the object is not managed by CDI. You should do the same for +MappedSuperclass+, +Embedded+ etc.

You can also annotate a +package-info.java+ to veto all beans in the package.

